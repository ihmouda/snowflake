# This is a basic workflow to help you get started with Actions

name: snowflake-devops-demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'migrations/**'
      - '.github/workflows/snowflake-devops-demo.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'migrations/**'
      - '.github/workflows/snowflake-devops-demo.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  Build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checkout repository
          id: check_out
          uses: actions/checkout@v2

        - name: Use Python 3.8.x
          uses: actions/setup-python@v2.2.1
          with:
           python-version: 3.8.x
    outputs:
      GITHUB_WORKSPACE: ${{ GITHUB_WORKSPACE }}

  Development:
    # The type of runner that the job will run on
    needs: Build
    environment: Dev
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - name: Run schemachange
          env:
            SF_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
            SF_USERNAME: ${{ secrets.SNOWFLAKE_USER }}
            SF_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
            SF_WAREHOUSE: ${{ secrets.SNOWFLAKE_WH }}
            SF_DATABASE: ${{ secrets.SNOWFLAKE_DB }}
            SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASS }}
          run: |
            echo "GITHUB_WORKSPACE: ${{ needs.Build.outputs.GITHUB_WORKSPACE }}"
            python --version
            echo "Step 1: Installing schemachange"
            pip install schemachange

            echo "Step 2: Running schemachange"
            schemachange -f ${{ needs.Build.outputs.GITHUB_WORKSPACE }}/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
